{"version":3,"sources":["components/RubiksCubePlan.tsx","components/RubiksCube.tsx","actions/algEditor.ts","components/AlgEditor.tsx","components/AlgList.tsx","actions/practice.ts","components/PractisePanel.tsx","components/MenuBar.tsx","middlewares/timer.ts","store/Alg.ts","store/ui/practice.ts","store/ui/algEditor.ts","store/ui/index.ts","actions/algs.ts","store/entities/algs.ts","store/entities/index.ts","store/index.ts","App.tsx","index.tsx"],"names":["RubiksCubePlan","props","cube","size","cubeArr","asString","split","map","str","react_default","a","createElement","width","height","viewBox","fill","points","x","y","RubiksCube","components_RubiksCubePlan","actionCreator","actionCreatorFactory","algEditorActions","updateBase","updatePremove","updateAuf","saveNew","save","new","delete","mirror","inverse","select","AlgEditor","withStyles","theme","createStyles","wrapper","textAlign","padding","spacing","unit","textField","textFieldWrapper","button","margin","containedButton","icon","marginLeft","connect","state","Object","objectSpread","ui","algEditor","dispatch","v","alg","idx","dlt","newF","_ref","validAlg","classes","index_es","className","RubiksCube_RubiksCube","getCube","label","value","premove","variant","onChange","e","target","fullWidth","base","auf","onClick","icons_index_es","color","disabled","AlgList","algs","entities","list","selectedIdx","picture","flexDirection","card","display","container","item","xs","key","raised","gutterBottom","practiceActions","next","reset","fail","toPressing","start","stop","tick","PractisePanel","slot","slotTitle","marginBottom","timer","fontFamily","fontSize","typography","marginTop","bottomButtons","top","bottom","practice","currentTime","mode","expectedCube","useEffect","handleKeyDown","keyCode","KEY_SPACE","length","handleKeyUp","i","Math","floor","random","document","addEventListener","removeEventListener","secStr","substring","milliStr","align","position","justify","aria-label","bottomButton","onKeyDown","preventDefault","Cancel_default","Autorenew_default","MenuBar","marginRight","component","react_router_dom","assign","to","timerMiddleware","getState","action","type","setTimeout","performance","now","mirrorMap","U","U'","u","u'","D","D'","d","d'","E","E'","R","L'","r","l'","L","R'","l","r'","R2","r2","L2","l2","F","F'","f","f'","B","B'","b","b'","S","S'","Alg","arguments","undefined","classCallCheck","this","createClass","s","join","Cube","move","toString","_unused","initialState","randomAuf","startTime","practiceReducer","reducerWithInitialState","case","tickTime","clone","cases","default","algEditorReducer","withBase","isValid","withPremove","withAuf","uiReducer","combineReducers","algsActions","create","update","remove","algsReducer","concat","toConsumableArray","filter","_","_ref2","from","removed","slice","entitiesReducer","history","createBrowserHistory","persistConfig","storage","whitelist","rootReducer","router","connectRouter","persistedReducer","persistReducer","configureStore","middlewares","createLogger","predicate","routerMiddleware","store","createStore","composeWithDevTools","applyMiddleware","apply","persistor","persistStore","App","esm","react_router","exact","path","render","es","integration_react","loading","getElementById"],"mappings":"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","file":"static/js/main.460a2109.chunk.js","sourcesContent":["\nimport React from 'react';\nimport Cube from 'cubejs';\n\nexport interface RubiksCubePlanProps {\n  cube: Cube,\n  size?: number\n}\n\nexport const RubiksCubePlan: React.FC<RubiksCubePlanProps> = (props: RubiksCubePlanProps) => {\n\n  const { cube }: RubiksCubePlanProps = props;\n  const size = typeof props.size !== 'undefined' ? props.size : '100%';\n  const colorMapper =  (str: string): string => {\n    switch(str) {\n      case 'U': \n        return 'rgb(247, 255, 43)';\n      case 'F':\n        return 'rgb(0, 255, 0)';\n      case 'B':\n        return 'rgb(0, 0, 255)';\n      case 'D':\n        return 'rgb(255, 255, 255)';\n      case 'R':\n        return 'rgb(244, 176, 66)';\n      case 'L':\n        return 'rgb(255, 0, 0)'; \n      default:\n        return '';\n    }\n  }  \n\n  const cubeArr: string[] = cube.asString().split('').map(colorMapper);\n  \n  return (\n    <svg width={size} height={size} viewBox=\"0 0 500 500\">\n      <polyline fill=\"rgb(0,0,0)\" points=\"68,68 90,0 410,0 432,68 500,90 500,410 432,432 410,500 90,500 68,432 0,410 0,90 \"/>\n      <rect fill={cubeArr[0]} height=\"116\" width=\"116\" x=\"72\" y=\"72\"/>\n      <rect fill={cubeArr[3]} height=\"116\" width=\"116\" x=\"72\" y=\"192\"/>\n      <rect fill={cubeArr[6]} height=\"116\" width=\"116\" x=\"72\" y=\"312\"/>\n      <rect fill={cubeArr[1]} height=\"116\" width=\"116\" x=\"192\" y=\"72\"/>\n      <rect fill={cubeArr[4]} height=\"116\" width=\"116\" x=\"192\" y=\"192\"/>\n      <rect fill={cubeArr[7]} height=\"116\" width=\"116\" x=\"192\" y=\"312\"/>\n      <rect fill={cubeArr[2]} height=\"116\" width=\"116\" x=\"312\" y=\"72\"/>\n      <rect fill={cubeArr[5]} height=\"116\" width=\"116\" x=\"312\" y=\"192\"/>\n      <rect fill={cubeArr[8]} height=\"116\" width=\"116\" x=\"312\" y=\"312\"/>\n      <polyline fill={cubeArr[4*9 + 0]} points=\"68,72 68,188 4,188 4,92\"/>\n      <rect fill={cubeArr[4*9 + 1]} height=\"116\" width=\"64\" x=\"4\" y=\"192\"/>\n      <polyline fill={cubeArr[4*9 + 2]} points=\"68,428 68,312 4,312 4,408\"/>\n      <polyline fill={cubeArr[9 + 2]} points=\"432,72 432,188 496,188 496,92\"/>\n      <rect fill={cubeArr[9 + 1]} height=\"116\" width=\"64\" x=\"432\" y=\"192\"/>\n      <polyline fill={cubeArr[9 + 0]} points=\"432,428 432,312 496,312 496,408\"/>\n      <polyline fill={cubeArr[5*9 + 2]} points=\"72,68 188,68 188,4 92,4\"/>\n      <rect fill={cubeArr[5*9 + 1]} height=\"64\" width=\"116\" x=\"192\" y=\"4\"/>\n      <polyline fill={cubeArr[5*9 + 0]} points=\"428,68 312,68 312,4 408,4\"/>\n      <polyline fill={cubeArr[2*9 + 0]} points=\"72,432 188,432 188,496 92,496\"/>\n      <rect fill={cubeArr[2*9 + 1]} height=\"64\" width=\"116\" x=\"192\" y=\"432\"/>\n      <polyline fill={cubeArr[2*9 + 2]} points=\"428,432 312,432 312,496 408,496\"/>\n    </svg>\n  )\n};\n\n\nexport default RubiksCubePlan;","\nimport React from 'react';\nimport Cube from 'cubejs';\nimport RubiksCubePlan from 'components/RubiksCubePlan';\n\nexport interface RubiksCubeProps {\n  cube: Cube,\n  size?: number,\n}\n\nexport const RubiksCube: React.FC<RubiksCubeProps> = (props: RubiksCubeProps) => {\n\n  return (\n    <RubiksCubePlan {...props} />\n  )\n};\n\n\nexport default RubiksCube;","\nimport actionCreatorFactory from 'typescript-fsa';\n\nimport { Alg } from '../store/Alg';\n\nconst actionCreator = actionCreatorFactory('ALG_EDITOR');\n\nexport const algEditorActions = {\n  updateBase: actionCreator<string>('UPDATE_ALG'),\n  updatePremove: actionCreator<string>('UPDATE_PREMOVE'),\n  updateAuf: actionCreator<string>('UPDATE_AUF'),\n  saveNew: actionCreator<Alg>('SAVE_NEW'),\n  save: actionCreator<{idx: number, alg: Alg}>('SAVE'),\n  new: actionCreator<void>('NEW'),\n  delete: actionCreator<number>('DELETE'),\n  mirror: actionCreator<void>('MIRROR'),\n  inverse: actionCreator<void>('INVERSE'),\n  select: actionCreator<{idx: number, alg: Alg}>('SELECT')\n}","\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\n\nimport { RubiksCube } from './RubiksCube';\nimport { AppState } from '../store';\nimport { createStyles, Paper, TextField, Button } from '@material-ui/core';\nimport { Delete as DeleteIcon, Save as SaveIcon, SaveAlt as SaveAltIcon, Create as CreateIcon } from '@material-ui/icons';\nimport { algEditorActions } from '../actions/algEditor';\nimport { Alg } from '../store/Alg';\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n  wrapper: {\n    textAlign: 'center',\n    padding: theme.spacing.unit,\n\n  },\n  textField: {\n  },\n  textFieldWrapper: {\n    padding: theme.spacing.unit,\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n  containedButton: {\n    margin: theme.spacing.unit,\n  },\n  icon: {\n    marginLeft: theme.spacing.unit,\n  }\n});\n\n\nconst mapStateToProps = (state: AppState) => ({\n  ...state.ui.algEditor,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  updateBase: (v:string) => dispatch(algEditorActions.updateBase(v)),\n  updatePremove: (v:string) => dispatch(algEditorActions.updatePremove(v)),\n  updateAuf: (v:string) => dispatch(algEditorActions.updateAuf(v)),\n  saveNew: (alg: Alg) => dispatch(algEditorActions.saveNew(alg)),\n  save: (idx: number, alg: Alg) => dispatch(algEditorActions.save({idx, alg})),\n  dlt: (idx: number) => dispatch(algEditorActions.delete(idx)),\n  newF: () => dispatch(algEditorActions.new()),\n  inverse: () => dispatch(algEditorActions.inverse()),\n  mirror: () => dispatch(algEditorActions.mirror()),\n})\n\nexport interface AlgEditProps extends WithStyles<typeof styles>, ReturnType<typeof mapStateToProps>, ReturnType<typeof mapDispatchToProps> {\n}\n\nexport const AlgEditorBase: React.SFC<AlgEditProps> = \n  ({ alg, validAlg, classes, updateBase, updatePremove, updateAuf, saveNew, save, dlt, \n    newF, inverse, mirror, idx }: AlgEditProps) => {\n    return (<Paper>\n      <div className={classes.wrapper}>\n        <RubiksCube cube={validAlg.getCube()} size={200}/>\n      </div>\n      <div className={classes.textFieldWrapper}>\n        <TextField\n          label=\"Premove\"\n          value={alg.premove}\n          variant=\"outlined\"\n          className={classes.textField}\n          onChange={(e) => updatePremove(e.target.value)}\n          fullWidth\n          margin=\"normal\"\n        />\n        <TextField\n          label=\"Algorithm\"\n          value={alg.base}\n          variant=\"outlined\"\n          className={classes.textField}\n          onChange={(e) => updateBase(e.target.value)}\n          fullWidth\n          margin=\"normal\"\n        />\n        <TextField\n          label=\"AUF\"\n          value={alg.auf}\n          variant=\"outlined\"\n          className={classes.textField}\n          onChange={(e) => updateAuf(e.target.value)}\n          fullWidth\n          margin=\"normal\"\n        />\n      </div>\n      <Button className={classes.button}\n        onClick={() => inverse()}\n      >\n        Inverse\n      </Button>\n      <Button className={classes.button}\n        onClick={() => mirror()}\n      >\n        Mirror\n      </Button>\n      <br />\n      <Button className={classes.containedButton} \n        variant=\"contained\"\n        onClick={() => newF()}\n      >\n        New<CreateIcon className={classes.icon}/>\n      </Button>\n      <Button className={classes.containedButton} \n        variant=\"contained\" \n        color=\"primary\"\n        disabled={idx === -1}\n        onClick={() => save(idx, alg)}\n      >\n        Save<SaveIcon className={classes.icon}/>\n      </Button>\n      <Button className={classes.containedButton} \n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => saveNew(alg)}\n      >\n        Save as new<SaveAltIcon className={classes.icon}/>\n      </Button>\n      <Button className={classes.containedButton}\n        variant=\"contained\" \n        color=\"secondary\"\n        onClick={() => dlt(idx)}\n        disabled={idx === -1}\n      >\n        Delete<DeleteIcon className={classes.icon} />\n      </Button> \n    </Paper>);\n};\n\nexport const AlgEditor = withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(AlgEditorBase));","\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\nimport { Dispatch } from 'redux';\n\nimport { RubiksCube } from './RubiksCube';\nimport { AlgEditor } from './AlgEditor';\nimport { Alg } from '../store/Alg';\nimport { AppState } from '../store';\nimport { algEditorActions } from '../actions/algEditor';\nimport { createStyles, CardContent, CardActionArea, Card, Grid, Typography } from '@material-ui/core';\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n  picture: {\n    flexDirection: 'column',\n    padding: theme.spacing.unit * 2,\n  },\n  card: {\n    display: 'flex',\n  }\n})\n\nexport interface AlgListBaseProps extends WithStyles<typeof styles> {\n  algs: Alg[],\n}\n\nconst mapStateToProps= (state: AppState) => ({\n  algs: state.entities.algs.list,\n  selectedIdx: state.ui.algEditor.idx,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  select: (idx: number, alg: Alg) => dispatch(algEditorActions.select({idx, alg})),\n});\n\nexport type AlgListProps = AlgListBaseProps & ReturnType<typeof mapDispatchToProps> & ReturnType<typeof mapStateToProps>\n\n\nexport const AlgListBase: React.SFC<AlgListProps> = \n    ({ algs, classes, select, selectedIdx }: AlgListProps) => {\n\n  const toElement = (alg: Alg, idx: number) => {\n\n    return (<Grid item xs = {4} key={idx}>\n      <Card raised={idx === selectedIdx}>\n        <CardActionArea  className={classes.card} onClick={() => select(idx, alg)}>\n          <div className={classes.picture}>\n            <RubiksCube cube={alg.getCube()} size={100}/>\n          </div>\n          <CardContent>\n            <Typography variant=\"body2\" gutterBottom>{alg.premove}</Typography>\n            <Typography variant=\"body1\" gutterBottom>{alg.base}</Typography>\n            <Typography variant=\"body2\" gutterBottom>{alg.auf}</Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Grid>)\n  }\n\n  return (\n    <Grid container spacing={24}>\n      <Grid item xs={9}>\n        <Grid container spacing={16}>\n          {algs.map(toElement)}\n        </Grid>\n      </Grid>\n      <Grid item xs={3}>\n        <AlgEditor />\n      </Grid>\n    </Grid>\n  )\n};\n\n\nexport const AlgList = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AlgListBase));\nexport default AlgList;","\nimport actionCreatorFactory from 'typescript-fsa';\n\nimport { Alg } from '../store/Alg';\n\nconst actionCreator = actionCreatorFactory('PRACTICE');\n\nexport const practiceActions = {\n  next: actionCreator<void>('NEXT'),\n  reset: actionCreator<void>('RESET'),\n  fail: actionCreator<void>('FAIL'),\n  toPressing: actionCreator<void>('TO_PRESSING'),\n  start: actionCreator<{alg: Alg, auf: '' | 'U' | 'U2' | \"U'\"}>('START'),\n  stop: actionCreator<void>('STOP'),\n  tick: actionCreator<number>('TICK'),\n}","import React, { useEffect } from 'react';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { createStyles, Grid, Typography, Fab, AppBar, Toolbar } from '@material-ui/core';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport { KEY_SPACE } from 'keycode-js';\n\nimport { AppState } from '../store';\nimport { RubiksCube } from './RubiksCube';\nimport { practiceActions } from '../actions/practice';\nimport { Alg } from '../store/Alg'; \n\nconst styles = (theme: Theme): StyleRules => createStyles({\n  slot: {\n    textAlign: 'center',\n  },\n  slotTitle: {\n    marginBottom: theme.spacing.unit * 2,\n  },\n  timer: {\n    fontFamily: \"sans-serif\",\n    fontSize: theme.typography.fontSize * 4,\n    marginTop: theme.spacing.unit * 4,\n  },\n  alg: {\n    fontSize: theme.typography.fontSize * 3,\n    marginTop: theme.spacing.unit * 2,\n  },\n  bottomButtons: {\n    top: 'auto',\n    bottom: theme.spacing.unit,\n  },\n});\n\nconst mapStateToProps = (state: AppState) => ({\n  ...state.ui.practice,\n  algs: state.entities.algs.list\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  next : () => dispatch(practiceActions.next()),\n  reset: () => dispatch(practiceActions.reset()),\n  fail: () => dispatch(practiceActions.fail()),\n  toPressing: () => dispatch(practiceActions.toPressing()),\n  start: (alg: Alg) => dispatch(practiceActions.start({alg, auf: ''})),\n  stop: () => dispatch(practiceActions.stop()),\n});\n\nexport type PractisePanelProps = WithStyles<typeof styles> & ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\nexport const PractisePanelBase: React.SFC<PractisePanelProps> = \n  ({ classes, currentTime, mode, algs, next, reset, fail, toPressing, start, stop, alg, expectedCube }: PractisePanelProps) => {\n\n  useEffect(() => {\n    const handleKeyDown = (e: any) => {\n      if(e.keyCode === KEY_SPACE && mode === 'wait' && algs.length > 0) {\n        toPressing();\n      }\n    }\n    const handleKeyUp = (e:any) => {\n      if(e.keyCode === KEY_SPACE && mode === 'press') {\n        const i = Math.floor(Math.random() * algs.length);\n        start(algs[i]);\n      } else if(e.keyCode === KEY_SPACE && mode === 'solve' && algs.length > 0) {\n        stop();\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keyup', handleKeyUp);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keyup', handleKeyUp);\n    }\n  }, [toPressing, start, mode, algs, stop]);\n\n  let secStr = '  ' + Math.floor(currentTime / 1000);\n  secStr = secStr.substring(secStr.length - 3);\n  let milliStr = '0' + Math.floor(currentTime) % 100;\n  milliStr = milliStr.substring(milliStr.length - 2);\n\n  return(\n    <div>\n      <Grid container>\n        <Grid item xs={6} className={classes.slot}>\n          <Typography align=\"center\" variant=\"h4\" className={classes.slotTitle}>\n            Solve\n          </Typography>\n          <RubiksCube cube={alg.getCube()} size={300}/>\n          <div className={classes.timer}>\n            {\n              mode === 'press' ? 'READY' :\n              currentTime > 0 ? secStr + '.' + milliStr :\n              ''\n            }\n          </div>\n        </Grid>\n        <Grid item xs={6} className={classes.slot}>\n          <Typography align=\"center\" variant=\"h4\" className={classes.slotTitle}>\n            Expected\n          </Typography>\n          <RubiksCube cube={expectedCube} size={300} />\n          <Typography variant=\"body1\" className={classes.alg}>\n            {mode === 'wait' ? alg.base : ''}\n            </Typography>\n        </Grid>\n      </Grid>\n      <AppBar position=\"fixed\" color=\"default\" className={classes.bottomButtons}>\n        <Toolbar>\n          <Grid container justify=\"center\">\n            {/* <Grid item xs={2}>\n              <Fab variant=\"extended\" color=\"primary\" aria-label=\"next\" className={classes.bottomButton}\n                onClick={() => next()} onKeyDown={(e) => e.preventDefault()}>\n                <ArrowForwardIcon />\n                Next\n              </Fab>\n            </Grid> */}\n            <Grid item xs={2}>\n              <Fab variant=\"extended\" color=\"secondary\" aria-label=\"failed\" className={classes.bottomButton}\n               onClick={() => fail()} onKeyDown={(e) => e.preventDefault()}>\n                <CancelIcon />\n                Failed\n              </Fab>\n            </Grid>\n            <Grid item xs={2}>\n              <Fab variant=\"extended\" color=\"default\" aria-label=\"failed\" className={classes.bottomButton}\n               onClick={() => reset()} onKeyDown={(e) => e.preventDefault()}>\n                <AutorenewIcon />\n                Reset\n              </Fab>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </div>\n    \n  );\n}\n\nexport const PractisePanel = withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(PractisePanelBase));","import React from 'react';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { createStyles } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nimport { AppBar, Toolbar, Button, Typography, Grid } from '@material-ui/core';\n\nimport { AppState } from '../store';\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n  button: {\n    marginRight: theme.spacing.unit\n  },\n});\n\nconst mapStateToProps = (state: AppState) => ({\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n});\n\nexport type MenuBarProps = WithStyles<typeof styles> & ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>;\nexport const MenuBarBase: React.SFC<MenuBarProps> = ({ classes }: MenuBarProps) => {\n\n  const PractisePanelLink = (props: any) => <Link to=\"/\" {...props} />\n  const AlgorithmsLink = (props: any) => <Link to=\"/algorithms\" {...props} />\n\n  return (\n    <AppBar position=\"static\" color=\"primary\">\n      <Toolbar>\n        <Grid container> \n          <Grid item xs={2}>\n            <Typography variant=\"h6\" color=\"inherit\">\n              Alg Ebbinghaus\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Button color=\"inherit\" className={classes.button} component={PractisePanelLink}>\n              Practise\n            </Button>\n            <Button color=\"inherit\" className={classes.button} component={AlgorithmsLink}>\n              Algorithms\n            </Button>\n            <Button color=\"inherit\" className={classes.button}>\n              Settings\n            </Button>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport const MenuBar = withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(MenuBarBase));\n\n","\nimport { practiceActions } from '../actions/practice';\nimport { Middleware, MiddlewareAPI, Dispatch, AnyAction } from 'redux';\n\nexport interface TimerableStore {\n  ui: {\n    practice: {\n      mode: 'wait' | 'press' | 'solve',\n    }\n  }\n}\n\nexport const timerMiddleware: Middleware = \n  <S extends TimerableStore>({ getState, dispatch }: MiddlewareAPI<Dispatch, S>) => (next: Dispatch<AnyAction>) => (action: any): any => {\n      if(action.type === practiceActions.start.type || \n          (action.type === practiceActions.tick.type && getState().ui.practice.mode === 'solve')){\n            setTimeout(() => {\n              dispatch(practiceActions.tick(performance.now()));\n            }, 10 );\n          }\n      return next(action);\n    };","\nimport Cube from 'cubejs';\n\nconst mirrorMap: any = {\n  U : \"U'\", \"U'\": \"U\", u : \"u'\", \"u'\": \"u\",\n  D : \"D'\", \"D'\": \"D\", d : \"d'\", \"d'\": \"d\",\n  E : \"E'\", \"E'\": \"E\",\n  R : \"L'\", \"L'\": \"R\", r : \"l'\", \"l'\": \"r\",\n  L : \"R'\", \"R'\": \"L\", l : \"r'\", \"r'\" : \"l\",\n  R2 : \"L2\", r2 : \"l2\", \n  L2 : \"R2\", l2 : \"r2\",\n  F : \"F'\", \"F'\" : \"F\", f : \"f'\", \"f'\" : \"f\",\n  B : \"B'\", \"B'\" : \"B\", b : \"b'\", \"b'\" : \"b\",\n  S : \"S'\", \"S'\" : \"S\"\n}\n\n\nexport class Alg {\n\n  static mirror(str: string): string {\n    return str.split(' ').map(s => mirrorMap[s] ? mirrorMap[s] : s).join(' ');\n  }\n\n  constructor(readonly premove: string = '',\n              readonly base: string = '',\n              readonly auf: string = '',){}\n  \n  toString(): string {\n    return this.premove + ' ' + this.base + ' ' + this.auf;\n  }\n\n  isValid(): boolean {\n    try {\n      const cube: Cube = new Cube();\n      cube.move(this.toString());\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  getCube(): Cube {\n    const cube = new Cube();\n    cube.move(Cube.inverse(this.toString()));\n    return cube;\n  }\n\n  withPremove(premove: string): Alg {\n    return new Alg(premove, this.base, this.auf);\n  }\n\n  withBase(base: string): Alg {\n    return new Alg(this.premove, base, this.auf);\n  }\n\n  withAuf(auf: string): Alg {\n    return new Alg(this.premove, this.base, auf);\n  }\n\n  mirror(): Alg {\n    return new Alg(Alg.mirror(this.premove), Alg.mirror(this.base), Alg.mirror(this.auf))\n  }\n  inverse(): Alg {\n    return new Alg(Cube.inverse(this.auf), Cube.inverse(this.base), Cube.inverse(this.premove));\n  }\n}","\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\nimport Cube from 'cubejs';\n\nimport { practiceActions } from '../../actions/practice';\nimport { Alg } from '../Alg';\n\n\nexport interface PracticeState {\n  alg: Alg,\n  randomAuf: \"U'\" | 'U2' | 'U' | '',\n  expectedCube: Cube,\n  mode: 'wait' | 'press' | 'solve',\n  currentTime: number,\n  startTime: number,\n}\n\nexport const initialState: PracticeState  = {\n  alg: new Alg(),\n  randomAuf: '',\n  expectedCube: new Cube(),\n  mode: 'wait',\n  currentTime: 0,\n  startTime: 0,\n}\n\nexport const practiceReducer = reducerWithInitialState(initialState)\n  .case(practiceActions.toPressing, (state): PracticeState => {\n    return {\n      ...state,\n      mode: 'press',\n    }\n  })\n  .case(practiceActions.start, (state, { alg, auf }): PracticeState => {\n    return {\n      ...state,\n      mode: 'solve',\n      startTime: performance.now(),\n      alg,\n      randomAuf: auf,\n    }\n  })\n  .case(practiceActions.tick, (state, tickTime): PracticeState => {\n    return {\n      ...state,\n      currentTime: tickTime - state.startTime,\n    }\n  })\n  .case(practiceActions.stop, (state): PracticeState => {\n    const cube = state.expectedCube.clone();\n    cube.move(state.randomAuf + ' ' + state.alg.toString());\n    return {\n      ...state,\n      mode: 'wait',\n      expectedCube: cube,\n    }\n  })\n  .cases([practiceActions.reset, practiceActions.fail], (state): PracticeState => {\n    return {\n      ...state,\n      mode: 'wait',\n      expectedCube: new Cube(),\n    }\n  })\n  .default((state, action) => {\n    return {...state};\n  })","\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport { Alg } from '../Alg';\nimport { algEditorActions } from '../../actions/algEditor';\n\n\nexport interface AlgEditorState {\n  alg: Alg,\n  validAlg: Alg,\n  idx: number,\n}\n\nexport const initialState  = {\n  alg: new Alg(),\n  validAlg: new Alg(),\n  idx: -1,\n}\n\nexport const algEditorReducer = reducerWithInitialState(initialState)\n  .case(algEditorActions.updateBase, (state, base) => {\n    const alg: Alg = state.alg.withBase(base);\n    const validAlg = alg.isValid()\n      ? alg\n      : state.validAlg;\n    return {...state, alg, validAlg}\n  })\n  .case(algEditorActions.updatePremove, (state, premove) => {\n    const alg: Alg = state.alg.withPremove(premove);\n    const validAlg = alg.isValid()\n      ? alg\n      : state.validAlg;\n    return {...state, alg, validAlg}\n  })\n  .case(algEditorActions.updateAuf, (state, auf) => {\n    const alg: Alg = state.alg.withAuf(auf);\n    const validAlg = alg.isValid()\n      ? alg\n      : state.validAlg;\n    return {...state, alg, validAlg}\n  })\n  .case(algEditorActions.inverse, (state) => {\n    return {\n      ...state,\n      alg: state.validAlg.inverse(),\n      validAlg: state.validAlg.inverse(),\n    }\n  })\n  .case(algEditorActions.mirror, (state) => {\n    return {\n      ...state,\n      alg: state.validAlg.mirror(),\n      validAlg: state.validAlg.mirror(),\n    }\n  })\n  .cases([algEditorActions.saveNew, algEditorActions.save, algEditorActions.new, algEditorActions.delete], () => {\n    return initialState;\n  })\n  .case(algEditorActions.select, (state, {idx, alg}) => {\n    return {\n      ...state,\n      alg,\n      validAlg: alg,\n      idx,\n    }\n  })\n  .default((state, action) => {\n    return {...state};\n  })","\nimport { combineReducers } from 'redux';\n\nimport { practiceReducer } from './practice';\nimport { algEditorReducer } from './algEditor';\n\nexport const uiReducer = combineReducers({\n  practice: practiceReducer,\n  algEditor: algEditorReducer,\n})","\n\nimport actionCreatorFactory from 'typescript-fsa';\nimport { Alg } from '../store/Alg';\n\nconst actionCreator = actionCreatorFactory('ALGS');\n\nexport const algsActions = {\n  create: actionCreator<Alg>('CREATE'),\n  update: actionCreator<{idx: number, alg: Alg}>('UPDATE'),\n  remove: actionCreator<number>('REMOVE'),\n  move: actionCreator<{from: number, to: number}>('MOVE')\n}","\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nimport { algsActions } from '../../actions/algs';\nimport { algEditorActions } from '../../actions/algEditor';\nimport { Alg } from '../Alg';\n\n\nexport interface AlgsState {\n  list: Alg[],\n}\n\nexport const initialState: AlgsState  = {\n  list: [],\n}\n\nexport const algsReducer = reducerWithInitialState(initialState)\n  .cases([algsActions.create, algEditorActions.saveNew], (state, alg: Alg) => {\n    return {\n      ...state,\n      list: [...state.list, alg]\n    };\n  })\n  .cases([algsActions.update, algEditorActions.save], (state, {idx, alg}) => {\n    return {\n      ...state,\n      list: state.list.map((v, i) => i === idx ? alg : v),\n    };\n  })\n  .cases([algsActions.remove, algEditorActions.delete], (state, idx: number) => {\n    return {\n      ...state,\n      list: state.list.filter((_, i) => i !== idx)\n    };\n  })\n  .case(algsActions.move, (state, {from, to}) => {\n    const removed = state.list.filter((_, i) => i !== from);\n    return {\n      ...state,\n      list: [...removed.slice(0, to), state.list[from], ...removed.slice(to)]\n    };\n  })\n  .default((state, action) => {\n    return {...state};\n  })","\nimport { combineReducers } from 'redux';\n\nimport { algsReducer } from './algs';\n\nexport const entitiesReducer = combineReducers({\n  algs: algsReducer,\n})","import { createStore, combineReducers, applyMiddleware} from \"redux\";\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createBrowserHistory } from 'history';\nimport { createLogger } from 'redux-logger'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport { timerMiddleware } from '../middlewares/timer';\nimport { uiReducer } from './ui';\nimport { entitiesReducer } from './entities';\n\nexport const history = createBrowserHistory();\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['entities'],\n}\n\nexport const rootReducer = combineReducers({\n  ui: uiReducer,\n  entities: entitiesReducer,\n  router: connectRouter(history),\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\n\nexport function configureStore() {\n  const logger = createLogger({\n    predicate: (getState, action) => action.type !== 'PRACTICE/TICK'\n  });\n\n  const middlewares: any[] = [logger, routerMiddleware(history), timerMiddleware];\n\n  const store = createStore(\n    persistedReducer,\n    composeWithDevTools(applyMiddleware(...middlewares))\n  );\n\n  return {store, persistor: persistStore(store)};\n}\n\nexport default configureStore;","import React from 'react';\nimport withStyles, { WithStyles, StyleRules } from '@material-ui/core/styles/withStyles';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { createStyles } from '@material-ui/core';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Route, Switch } from 'react-router';\n\n\nimport { AlgList } from './components/AlgList';\nimport { PractisePanel } from './components/PractisePanel';\nimport { MenuBar } from './components/MenuBar';\nimport { history } from './store';\n\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n  container: {\n    padding: theme.spacing.unit * 2,\n  }\n});\n\nexport type AppProps = WithStyles<typeof styles>;\nexport const AppBase: React.SFC<AppProps> = ({ classes }: AppProps) => {\n  return(\n    <ConnectedRouter history={history}>\n      <MenuBar />\n      <main className={classes.container}>\n          <Switch>\n            <Route exact path=\"/\" component={PractisePanel} />\n            <Route path=\"/algorithms\" component={AlgList} />\n            <Route render={() => <div>Not found Error</div>} />\n            {/* sss */}\n          </Switch>\n      </main>\n    </ConnectedRouter>\n  );\n}\n\nexport const App = withStyles(styles)(AppBase);","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { App } from './App';\nimport configureStore from 'store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst { store, persistor } = configureStore();\n\n\nrender(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}